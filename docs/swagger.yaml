basePath: /api
definitions:
  models.Block:
    properties:
      difficulty:
        type: string
      extraData:
        type: string
      gasLimit:
        type: integer
      gasUsed:
        type: integer
      hash:
        type: string
      nonce:
        type: string
      number:
        type: integer
      parentHash:
        type: string
      size:
        type: integer
      timestamp:
        type: integer
      totalDifficulty:
        type: string
      transactionsCount:
        type: integer
      validator:
        type: string
    type: object
  models.Log:
    properties:
      address:
        type: string
      blockHash:
        type: string
      blockNumber:
        type: integer
      data:
        type: string
      logIndex:
        type: integer
      topics:
        items:
          type: string
        type: array
      transactionHash:
        type: string
    type: object
  models.Transaction:
    properties:
      blockHash:
        type: string
      blockNumber:
        type: integer
      contractAddress:
        type: string
      from:
        type: string
      gas:
        type: integer
      gasPrice:
        type: integer
      gasUsed:
        type: integer
      hash:
        type: string
      input:
        type: string
      nonce:
        type: integer
      status:
        type: integer
      timestamp:
        type: integer
      to:
        type: string
      transactionIndex:
        type: integer
      value:
        type: string
    type: object
host: localhost:8888
info:
  contact: {}
  description: This is a block explorer server. You can visit the GitHub repository
    at https://github.com/Ethernal-Tech/blockchain-explorer-api
  title: Block Explorer API
  version: "1.0"
paths:
  /v1/block/hash/{blockhash}:
    get:
      parameters:
      - description: block hash
        in: path
        name: blockhash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Block'
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get block by hash
      tags:
      - block
  /v1/block/number/{blocknumber}:
    get:
      parameters:
      - description: block number
        in: path
        name: blocknumber
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Block'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get block by number
      tags:
      - block
  /v1/log:
    get:
      parameters:
      - description: address
        in: query
        name: address
        type: string
      - description: block number to start searching for logs
        in: query
        name: startBlock
        type: integer
      - description: block number to stop searching for logs
        in: query
        name: endBlock
        type: integer
      - description: topic0
        in: query
        name: topic0
        type: string
      - description: topic1
        in: query
        name: topic1
        type: string
      - description: topic2
        in: query
        name: topic2
        type: string
      - description: topic3
        in: query
        name: topic3
        type: string
      - description: operator and|or between topic0 & topic1
        in: query
        name: topic0_1_opr
        type: string
      - description: operator and|or between topic0 & topic2
        in: query
        name: topic0_2_opr
        type: string
      - description: operator and|or between topic0 & topic3
        in: query
        name: topic0_3_opr
        type: string
      - description: operator and|or between topic1 & topic2
        in: query
        name: topic1_2_opr
        type: string
      - description: operator and|or between topic1 & topic3
        in: query
        name: topic1_3_opr
        type: string
      - description: operator and|or between topic2 & topic3
        in: query
        name: topic2_3_opr
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: number of logs displayed per page
        in: query
        name: perPage
        type: integer
      - description: use asc to sort by ascending and desc to sort by descending
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Log'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get logs
      tags:
      - log
  /v1/log/transactionhash/{transactionhash}:
    get:
      parameters:
      - description: transaction hash
        in: path
        name: transactionhash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Log'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get logs by transaction hash
      tags:
      - log
  /v1/transaction/address/{address}:
    get:
      parameters:
      - description: address
        in: path
        name: address
        required: true
        type: string
      - description: block number to start searching for transactions
        in: query
        name: startBlock
        type: integer
      - description: block number to stop searching for transactions
        in: query
        name: endBlock
        type: integer
      - description: page number
        in: query
        name: page
        type: integer
      - description: number of transactions displayed per page
        in: query
        name: perPage
        type: integer
      - description: use asc to sort by ascending and desc to sort by descending
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Transaction'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get transactions by address
      tags:
      - transaction
  /v1/transaction/hash/{txhash}:
    get:
      parameters:
      - description: transaction hash
        in: path
        name: txhash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Transaction'
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get transaction by hash
      tags:
      - transaction
  /v1/transaction/txinblock/{blocknumber}:
    get:
      parameters:
      - description: block number
        in: path
        name: blocknumber
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Transaction'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get transactions in block
      tags:
      - transaction
swagger: "2.0"
