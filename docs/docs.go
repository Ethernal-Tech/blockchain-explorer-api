// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/block/hash/{blockhash}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "Get block by hash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "block hash",
                        "name": "blockhash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Block"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/block/number/{blocknumber}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "Get block by number",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "block number",
                        "name": "blocknumber",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Block"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/example/helloworld": {
            "get": {
                "description": "do ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "example"
                ],
                "summary": "ping example",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/log": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "log"
                ],
                "summary": "Get logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "block number to start searching for logs",
                        "name": "startBlock",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "block number to stop searching for logs",
                        "name": "endBlock",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "topic0",
                        "name": "topic0",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "topic1",
                        "name": "topic1",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "topic2",
                        "name": "topic2",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "topic3",
                        "name": "topic3",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "operator and|or between topic0 \u0026 topic1",
                        "name": "topic0_1_opr",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "operator and|or between topic0 \u0026 topic2",
                        "name": "topic0_2_opr",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "operator and|or between topic0 \u0026 topic3",
                        "name": "topic0_3_opr",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "operator and|or between topic1 \u0026 topic2",
                        "name": "topic1_2_opr",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "operator and|or between topic1 \u0026 topic3",
                        "name": "topic1_3_opr",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "operator and|or between topic2 \u0026 topic3",
                        "name": "topic2_3_opr",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of logs displayed per page",
                        "name": "perPage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "use asc to sort by ascending and desc to sort by descending",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Log"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/log/transactionhash/{transactionhash}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "log"
                ],
                "summary": "Get logs by transaction hash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "transaction hash",
                        "name": "transactionhash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Log"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/transaction/address/{address}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Get transactions by address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "block number to start searching for transactions",
                        "name": "startBlock",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "block number to stop searching for transactions",
                        "name": "endBlock",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of transactions displayed per page",
                        "name": "perPage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "use asc to sort by ascending and desc to sort by descending",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Transaction"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/transaction/hash/{txhash}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Get transaction by hash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "transaction hash",
                        "name": "txhash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Transaction"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/transaction/txinblock/{blocknumber}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Get transactions in block",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "block number",
                        "name": "blocknumber",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Transaction"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v2/example/helloworld": {
            "get": {
                "description": "do ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "example"
                ],
                "summary": "ping example",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Block": {
            "type": "object",
            "properties": {
                "difficulty": {
                    "type": "string"
                },
                "extraData": {
                    "type": "string"
                },
                "gasLimit": {
                    "type": "integer"
                },
                "gasUsed": {
                    "type": "integer"
                },
                "hash": {
                    "type": "string"
                },
                "nonce": {
                    "type": "string"
                },
                "number": {
                    "type": "integer"
                },
                "parentHash": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "integer"
                },
                "totalDifficulty": {
                    "type": "string"
                },
                "transactionsCount": {
                    "type": "integer"
                },
                "validator": {
                    "type": "string"
                }
            }
        },
        "models.Log": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "blockHash": {
                    "type": "string"
                },
                "blockNumber": {
                    "type": "integer"
                },
                "data": {
                    "type": "string"
                },
                "logIndex": {
                    "type": "integer"
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "transactionHash": {
                    "type": "string"
                }
            }
        },
        "models.Transaction": {
            "type": "object",
            "properties": {
                "blockHash": {
                    "type": "string"
                },
                "blockNumber": {
                    "type": "integer"
                },
                "contractAddress": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "gas": {
                    "type": "integer"
                },
                "gasPrice": {
                    "type": "integer"
                },
                "gasUsed": {
                    "type": "integer"
                },
                "hash": {
                    "type": "string"
                },
                "input": {
                    "type": "string"
                },
                "nonce": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "integer"
                },
                "to": {
                    "type": "string"
                },
                "transactionIndex": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8888",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Block Explorer API",
	Description:      "This is a block explorer server. You can visit the GitHub repository at https://github.com/Ethernal-Tech/blockchain-explorer-api",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
